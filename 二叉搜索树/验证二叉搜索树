/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 //递归版

class Solution {
    public boolean isValidBST(TreeNode root) {
        return judgeBST(root,Long.MIN_VALUE,Long.MAX_VALUE);
    }
    public boolean judgeBST(TreeNode root,long lo,long hi){
        if(root==null)
            return true;
        if(root.val<=lo||root.val>=hi) return false;
        if(!judgeBST(root.left,lo,root.val)) return false;
        if(!judgeBST(root.right,root.val,hi)) return false;
        return true;
    }
}
 
 
 
 //迭代版
class Solution {
    public boolean isValidBST(TreeNode root) {
        if(root==null||(root.left==null&&root.right==null))
            return true;
        long curMax=Long.MIN_VALUE;
        Stack<TreeNode> stack=new Stack<>();
        TreeNode cur=new TreeNode(Integer.MAX_VALUE);
        stack.push(root);
        while(!stack.empty()){
            while(root.left!=null){
                stack.push(root=root.left);
            }
            cur=stack.pop();
            if(curMax<cur.val)
                curMax=cur.val;
            else
                return false;
            if(cur.right!=null)
                stack.push(root=cur.right);
        }
        return true;
    }
}
